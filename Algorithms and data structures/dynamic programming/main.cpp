/*
 –ù–∞ –º–µ–∂—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Ä–æ–±–æ—Ç–æ–≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –≤ –æ–¥–∏–Ω —Ç—É—Ä –∏ –≤ –Ω–µ–æ–±—ã—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
 –ó–∞–¥–∞—á–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ä–∞–∑–¥–∞—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –∞ –Ω–µ –≤—Å–µ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ —Ç—É—Ä–∞, –∏ –∫–∞–∂–¥–∞—è ùëñ -—è –∑–∞–¥–∞—á–∞ (1‚â§ùëñ‚â§ùëõ) —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω–æ–π —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤ —Å–≤–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ ùë†ùëñ.
 –ü—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–∑—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –±—É–¥–µ—Ç –æ–Ω –µ–µ —Ä–µ—à–∞—Ç—å –∏–ª–∏ –Ω–µ—Ç.
 –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω –≤—ã–±–∏—Ä–∞–µ—Ç –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç—É –∑–∞–¥–∞—á—É, —Ç–æ —É –Ω–µ–≥–æ –µ—Å—Ç—å ùë°ùëñ –º–∏–Ω—É—Ç –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã —Å–¥–∞—Ç—å –µ–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É,
 –ø—Ä–∏—á–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –¥—Ä—É–≥–æ–π –∑–∞–¥–∞—á–∏. –ï—Å–ª–∏ –∂–µ —É—á–∞—Å—Ç–Ω–∏–∫ –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏,
 —Ç–æ –≤ –±—É–¥—É—â–µ–º –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –∫ –Ω–µ–π –≤–µ—Ä–Ω—É—Ç—å—Å—è. –í —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –≤—Ä–µ–º—è, –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é —Ä–µ—à–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫,
 –æ–Ω –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å –¥—Ä—É–≥—É—é –∑–∞–¥–∞—á—É, —Å—Ç–∞–≤—à—É—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤ —ç—Ç–æ—Ç –∂–µ –º–æ–º–µ–Ω—Ç, –µ—Å–ª–∏ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞ –µ—Å—Ç—å, –∏–ª–∏ –∂–¥–∞—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–æ–π –∑–∞–ª–∞—á–∏.
 –ü—Ä–∏ —ç—Ç–æ–º –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ i-–π –∑–∞–¥–∞—á–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç ùëêùëñ –±–∞–ª–ª–æ–≤.
 */
#include <algorithm>
#include <iostream>
#include <vector>
#define int long long
using namespace std;
struct Event {
    int state = 0;
    int start = 0;
    int time = 0;
    int coins = 0;
    Event(int start, int time, int coins) : start(start), time(time), coins(coins){};
    explicit Event(int start) : start(start){};
    Event() = default;
    bool operator<(const Event &t) const {
        return start < t.start;
    }
};
int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int n;
    cin >> n;
    vector<Event> a;
    int s, t, c;
    int mx = 0;
    for (int i = 0; i < n; i++) {
        cin >> s >> t >> c;
        a.emplace_back(s, t, c);
        mx = max(mx, s + t);
    }
    a.emplace_back(0, 0, 0);
    sort(a.begin(), a.end());
    a.emplace_back(mx, 0, 0);
    for (int i = 1; i < a.size(); i++) {
        size_t next = lower_bound(a.begin(), a.end(), Event(a[i].start + a[i].time)) - a.begin();
        a[i].state = max(a[i - 1].state, a[i].state);
        a[next].state = max(a[next].state, a[i].state + a[i].coins);
    }
    cout << a.back().state;
    return 0;
}